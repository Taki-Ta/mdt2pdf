name: 构建Docker镜像

on:
    push:
        branches: [main, master]
        tags: ["v*.*.*"]
    pull_request:
        branches: [main, master]
    workflow_dispatch:

env:
    IMAGE_NAME: mdt2pdf

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: 检出代码
              uses: actions/checkout@v4

            - name: 设置Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: 提取元数据
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=sha,prefix={{branch}}-

            - name: 构建Docker镜像
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: false
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  outputs: type=oci,dest=/tmp/mdt2pdf-image.tar
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: 压缩镜像文件
              run: |
                  gzip /tmp/mdt2pdf-image.tar
                  ls -lh /tmp/mdt2pdf-image.tar.gz

            - name: 上传镜像产物
              uses: actions/upload-artifact@v4
              with:
                  name: docker-image-${{ github.sha }}
                  path: /tmp/mdt2pdf-image.tar.gz
                  retention-days: 7

            - name: 创建发布说明
              if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
              run: |
                  echo "## Docker镜像构建完成 🐳" > release_notes.md
                  echo "" >> release_notes.md
                  echo "### 使用方法" >> release_notes.md
                  echo "" >> release_notes.md
                  echo "1. 下载镜像文件 \`mdt2pdf-image.tar.gz\`" >> release_notes.md
                  echo "2. 解压并加载镜像：" >> release_notes.md
                  echo "   \`\`\`bash" >> release_notes.md
                  echo "   gunzip mdt2pdf-image.tar.gz" >> release_notes.md
                  echo "   docker load < mdt2pdf-image.tar" >> release_notes.md
                  echo "   \`\`\`" >> release_notes.md
                  echo "3. 运行容器：" >> release_notes.md
                  echo "   \`\`\`bash" >> release_notes.md
                  echo "   docker run -p 8000:8000 ${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> release_notes.md
                  echo "   \`\`\`" >> release_notes.md
                  echo "4. 访问应用：http://localhost:8000" >> release_notes.md
                  echo "" >> release_notes.md
                  echo "### 自定义端口" >> release_notes.md
                  echo "   \`\`\`bash" >> release_notes.md
                  echo "   docker run -p 3000:3000 -e PORT=3000 ${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> release_notes.md
                  echo "   \`\`\`" >> release_notes.md
                  echo "" >> release_notes.md
                  echo "### 镜像信息" >> release_notes.md
                  echo "- **构建时间**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> release_notes.md
                  echo "- **提交SHA**: ${{ github.sha }}" >> release_notes.md
                  echo "- **分支**: ${{ github.ref_name }}" >> release_notes.md
                  echo "- **支持架构**: linux/amd64, linux/arm64" >> release_notes.md

            - name: 发布到Releases（仅标签推送）
              if: startsWith(github.ref, 'refs/tags/')
              uses: softprops/action-gh-release@v1
              with:
                  files: /tmp/mdt2pdf-image.tar.gz
                  body_path: release_notes.md
                  generate_release_notes: true

    test:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: 检出代码
              uses: actions/checkout@v4

            - name: 下载构建的镜像
              uses: actions/download-artifact@v4
              with:
                  name: docker-image-${{ github.sha }}
                  path: /tmp

            - name: 加载并测试镜像
              run: |
                  gunzip /tmp/mdt2pdf-image.tar.gz
                  docker load < /tmp/mdt2pdf-image.tar

                  # 启动容器
                  docker run -d -p 8000:8000 --name test-container ${{ env.IMAGE_NAME }}:${{ github.ref_name }}

                  # 等待服务启动
                  sleep 10

                  # 测试健康检查端点
                  curl -f http://localhost:8000/health || exit 1

                  # 测试主页
                  curl -f http://localhost:8000/ || exit 1

                  # 清理
                  docker stop test-container
                  docker rm test-container

                  echo "✅ 镜像测试通过！"
